From 4039cf9c8bd394a8d870cb83045f4a68f196f906 Mon Sep 17 00:00:00 2001
From: Dan Callaghan <dcallagh@redhat.com>
Date: Wed, 29 Apr 2015 16:41:23 +1000
Subject: [PATCH 2/3] fix remaining usages of turbojson.jsonify.encode to be
 HTML-safe

Bug: 1215024
Change-Id: Ibad4e34415be9c7d0c026588f10d8d6dfd7ab1d3
---
 .../inttest/server/selenium/test_system_search.py  | 13 ++++++++++
 Server/bkr/server/widgets.py                       | 28 +++++++++++-----------
 2 files changed, 27 insertions(+), 14 deletions(-)

diff --git a/IntegrationTests/src/bkr/inttest/server/selenium/test_system_search.py b/IntegrationTests/src/bkr/inttest/server/selenium/test_system_search.py
index 15e8e42..d29eca0 100644
--- a/IntegrationTests/src/bkr/inttest/server/selenium/test_system_search.py
+++ b/IntegrationTests/src/bkr/inttest/server/selenium/test_system_search.py
@@ -543,6 +543,19 @@ def test_date_picker(self):
         b.find_element_by_id('searchform').submit()
         check_system_search_results(b, present=[old_system], absent=[new_system])
 
+    # https://bugzilla.redhat.com/show_bug.cgi?id=1215024
+    def test_closing_script_tag_escaped_in_search_bar(self):
+        with session.begin():
+            Key.lazy_create(key_name=u'</script>')
+        b = self.browser
+        b.get(get_server_base())
+        b.find_element_by_link_text('Show Search Options').click()
+        wait_for_animation(b, '#searchform')
+        Select(b.find_element_by_name('systemsearch-0.table'))\
+            .select_by_visible_text('Key/Value')
+        Select(b.find_element_by_name('systemsearch-0.keyvalue'))\
+            .select_by_visible_text('</script>')
+
 
 class SystemVisibilityTest(WebDriverTestCase):
 
diff --git a/Server/bkr/server/widgets.py b/Server/bkr/server/widgets.py
index 1ae209c..dc44a91 100644
--- a/Server/bkr/server/widgets.py
+++ b/Server/bkr/server/widgets.py
@@ -8,7 +8,7 @@
 from kid import Element
 import time
 import turbogears as tg
-from turbojson import jsonify
+from bkr.server.stdvars import jsonify_for_html
 from turbogears.widgets.rpc import RPC
 from sqlalchemy import distinct
 import re
@@ -176,7 +176,7 @@ class InlineRemoteForm(RPC, InlineForm):
     def update_params(self, d):
         super(InlineRemoteForm, self).update_params(d)
         d['form_attrs']['onSubmit'] = "return !remoteFormRequest(this, '%s', %s);" % (
-            d.get("update", ''), jsonify.encode(self.get_options(d)))
+            d.get("update", ''), jsonify_for_html(self.get_options(d)))
 
 
 class RadioButtonList(SelectionField):
@@ -306,7 +306,7 @@ def display(self, value=None, **params):
             raise ValueError('Missing arguments to %s: %s' %
                 (self.__class__.__name__, ','.join(dict(missing).keys())))
         params['action_type'] = params.get('action_type', 'delete')
-        params['data'] = jsonify.encode(params['data'])
+        params['data'] = jsonify_for_html(params['data'])
         return super(DeleteLinkWidgetAJAX, self).display(value, **params)
 
 
@@ -686,7 +686,7 @@ def __init__(self, table, search_controller=None, extra_selects=None,
         self.fields = [table_field, operation_field, value_field]
         new_selects = []
         self.extra_callbacks = {} 
-        self.search_object = jsonify.encode(table)
+        self.search_object = jsonify_for_html(table)
             
         if extra_selects is not None: 
             new_class = [] 
@@ -726,7 +726,7 @@ def __init__(self, table, search_controller=None, extra_selects=None,
                         log.error('Quick searches expects vals as <column>-<operation>-<value>. The following is incorrect: %s' % (elem)) 
                     else: 
                         self.quickly_searches.append((name, '%s-%s-%s' % (vals[0],vals[1],vals[2])))
-        self.date_picker = jsonify.encode(kw.get('date_picker',list()) )
+        self.date_picker = jsonify_for_html(kw.get('date_picker',list()) )
         controllers = kw.get('table_search_controllers',dict())  
         self.table_search_controllers_stringified = str(controllers)
         self.extra_callbacks_stringified = str(self.extra_callbacks)
@@ -743,7 +743,7 @@ def display(self, value=None, **params):
                 json_this = {} 
                 for elem in params['options']['result_columns']: 
                     json_this.update({elem : 1})
-                params['default_result_columns'] = jsonify.encode(json_this)     
+                params['default_result_columns'] = jsonify_for_html(json_this)
             else:
                 params['default_result_columns'] = 'null'
             if 'col_options' in params['options']:
@@ -1152,7 +1152,7 @@ def update_params(self, d):
         if d['recipe']:
             d['hidden_fields'].append(HiddenField(name='recipe_id', attrs={'value' : d['recipe'].id}))
         d['submit'].attrs.update({'onClick' :  "return ! system_action_remote_form_request('%s', %s, '%s');" % (
-            d['options']['name'], jsonify.encode(self.get_options(d)), d['action'])})
+            d['options']['name'], jsonify_for_html(self.get_options(d)), d['action'])})
 
 
 class RecipeActionWidget(CompoundWidget):
@@ -1220,8 +1220,8 @@ def update_params(self, d):
         d['attrs']['class'] = 'input-block-level'
         d['attrs']['onchange'] = "ProductChange('%s',%s, %s)" % (
             url(d.get('action')),
-            jsonify.encode({'id': d.get('job_id')}),
-            jsonify.encode(self.get_options(d)),
+            jsonify_for_html({'id': d.get('job_id')}),
+            jsonify_for_html(self.get_options(d)),
             )
 
 class RetentionTagWidget(SingleSelectField, RPC): #FIXME perhaps I shoudl create a parent that both Retention and Priority inherit from
@@ -1247,8 +1247,8 @@ def update_params(self, d):
         d['attrs']['id'] = 'job_retentiontag'
         d['attrs']['onchange'] = "RetentionTagChange('%s',%s, %s)" % (
             url(d.get('action')),
-            jsonify.encode({'id': d.get('job_id')}),
-            jsonify.encode(self.get_options(d)),
+            jsonify_for_html({'id': d.get('job_id')}),
+            jsonify_for_html(self.get_options(d)),
             )
 
 
@@ -1309,7 +1309,7 @@ class JobWhiteboard(RPC, CompoundWidget):
     def update_params(self, d):
         super(JobWhiteboard, self).update_params(d)
         d['form_attrs']['onsubmit'] = "return !remoteFormRequest(this, null, %s);" % (
-            jsonify.encode(self.get_options(d)))
+            jsonify_for_html(self.get_options(d)))
 
 
 class TaskActionWidget(RPC):
@@ -1334,8 +1334,8 @@ def update_params(self, d):
         super(TaskActionWidget, self).update_params(d)
         d['task_details']['onclick'] = "TaskDisable('%s',%s, %s); return false;" % (
             d.get('action'),
-            jsonify.encode({'t_id': d['task_details'].get('t_id')}),
-            jsonify.encode(self.get_options(d)),
+            jsonify_for_html({'t_id': d['task_details'].get('t_id')}),
+            jsonify_for_html(self.get_options(d)),
             )
 
 class JobActionWidget(CompoundWidget):
-- 
1.9.3

