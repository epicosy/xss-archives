CVE-2015-9230: XSS Vulnerability in BulletProof Security Version .52.4


Securin description: A Cross-Site Scripting vulnerability was identified on WordPress plugin BulletProof Security before .52.5 in the admin/db-backup-security/db-backup-security.php page. 

Packet Storm description: By exploiting a Cross-site scripting vulnerability the attacker can hijack a logged in user’s session by stealing cookies. This means that the malicious hacker can change the logged in user’s password and invalidate the session of the victim while the hacker maintains access. 

GitHub POC: Visit the following page on a site with this plugin installed. http://yourwordpresssite.com/wordpress/wp-admin/admin.php?page=bulletproof-security/admin/db-backup-security/db-backup-security.php and modify the value of DBTablePrefix variable with "></script><script>alert(document.cookie);</script> payload and send the request to the server. Now, the added XSS payload will be echoed back from the server without validating the input. It also affects wp-config.php file, $table_prefix and corrupts the database connectivity. Note: XSS payload has been tried with the application once after implementing Unfiltered Html Settings as defined to wp-config.php file. Users: You MUST be an Administrator and logged into the site as an Administrator in order to enter/test XSS html testing code in the Randomly Generated DB Table Prefix Form text box. Please do NOT actually try this test if you are using a version of BPS versions. Entering an invalid DB Table Prefix name will crash your website. The Post Request DBTablePrefix variable in the URL http://yourwordpresssite.com/wordpress/wp-admin/admin.php?page=bulletproof-security/admin/db-backup-security/db-backup-security.php is vulnerable to Cross Site Scripting (XSS). Reproducing Steps: 1) Logon into any wordpress application (localhost or public host). 2) Modifying the value of DBTablePrefix variable in BulletProof Security .52.4. 3) Fill all the variables with "><script>alert(document.cookie);</script> payload and send the request to the server. 4) Now, the added XSS payload will be echoed back from the server without validating the input even after wp-config.php file has been configured with XSS filter settings. 5) It also affects wp-config.php file $table_prefix and corrupts the database connectivity. 

